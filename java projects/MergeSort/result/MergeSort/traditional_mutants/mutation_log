AORB_1:10:void_mergeSort(int):list.length / 2 => list.length * 2
AORB_2:10:void_mergeSort(int):list.length / 2 => list.length % 2
AORB_3:10:void_mergeSort(int):list.length / 2 => list.length + 2
AORB_4:10:void_mergeSort(int):list.length / 2 => list.length - 2
AORB_5:11:void_mergeSort(int):list.length / 2 => list.length * 2
AORB_6:11:void_mergeSort(int):list.length / 2 => list.length % 2
AORB_7:11:void_mergeSort(int):list.length / 2 => list.length + 2
AORB_8:11:void_mergeSort(int):list.length / 2 => list.length - 2
AORB_9:13:void_mergeSort(int):list.length / 2 => list.length * 2
AORB_10:13:void_mergeSort(int):list.length / 2 => list.length % 2
AORB_11:13:void_mergeSort(int):list.length / 2 => list.length + 2
AORB_12:13:void_mergeSort(int):list.length / 2 => list.length - 2
AORB_13:13:void_mergeSort(int):list.length - list.length / 2 => list.length * (list.length / 2)
AORB_14:13:void_mergeSort(int):list.length - list.length / 2 => list.length / (list.length / 2)
AORB_15:13:void_mergeSort(int):list.length - list.length / 2 => list.length % (list.length / 2)
AORB_16:13:void_mergeSort(int):list.length - list.length / 2 => list.length + list.length / 2
AORB_17:15:void_mergeSort(int):list.length / 2 => list.length * 2
AORB_18:15:void_mergeSort(int):list.length / 2 => list.length % 2
AORB_19:15:void_mergeSort(int):list.length / 2 => list.length + 2
AORB_20:15:void_mergeSort(int):list.length / 2 => list.length - 2
AORS_1:28:void_merge(int,int,int):current1++ => current1--
AORS_2:28:void_merge(int,int,int):current1++ => --current1
AORS_3:28:void_merge(int,int,int):current1++ => ++current1
AORS_4:30:void_merge(int,int,int):current2++ => current2--
AORS_5:30:void_merge(int,int,int):current2++ => --current2
AORS_6:30:void_merge(int,int,int):current2++ => ++current2
AORS_7:34:void_merge(int,int,int):current1++ => current1--
AORS_8:34:void_merge(int,int,int):current1++ => --current1
AORS_9:34:void_merge(int,int,int):current1++ => ++current1
AORS_10:37:void_merge(int,int,int):current2++ => current2--
AORS_11:37:void_merge(int,int,int):current2++ => --current2
AORS_12:37:void_merge(int,int,int):current2++ => ++current2
AODS_1:28:void_merge(int,int,int):current3++ => current3
AODS_2:28:void_merge(int,int,int):current1++ => current1
AODS_3:30:void_merge(int,int,int):current3++ => current3
AODS_4:30:void_merge(int,int,int):current2++ => current2
AODS_5:34:void_merge(int,int,int):current3++ => current3
AODS_6:34:void_merge(int,int,int):current1++ => current1
AODS_7:37:void_merge(int,int,int):current3++ => current3
AODS_8:37:void_merge(int,int,int):current2++ => current2
AOIU_1:10:void_mergeSort(int):list.length => -list.length
AOIU_2:11:void_mergeSort(int):list.length => -list.length
AOIU_3:13:void_mergeSort(int):list.length => -list.length
AOIU_4:14:void_mergeSort(int):secondHalfLength => -secondHalfLength
AOIU_5:15:void_mergeSort(int):list.length => -list.length
AOIU_6:15:void_mergeSort(int):secondHalfLength => -secondHalfLength
AOIS_1:9:void_mergeSort(int):list.length => ++list.length
AOIS_2:9:void_mergeSort(int):list.length => --list.length
AOIS_3:9:void_mergeSort(int):list.length => list.length++
AOIS_4:9:void_mergeSort(int):list.length => list.length--
AOIS_5:10:void_mergeSort(int):list.length => ++list.length
AOIS_6:10:void_mergeSort(int):list.length => --list.length
AOIS_7:10:void_mergeSort(int):list.length => list.length++
AOIS_8:10:void_mergeSort(int):list.length => list.length--
AOIS_9:11:void_mergeSort(int):list.length => ++list.length
AOIS_10:11:void_mergeSort(int):list.length => --list.length
AOIS_11:11:void_mergeSort(int):list.length => list.length++
AOIS_12:11:void_mergeSort(int):list.length => list.length--
AOIS_13:13:void_mergeSort(int):list.length => ++list.length
AOIS_14:13:void_mergeSort(int):list.length => --list.length
AOIS_15:13:void_mergeSort(int):list.length => list.length++
AOIS_16:13:void_mergeSort(int):list.length => list.length--
AOIS_17:13:void_mergeSort(int):list.length => ++list.length
AOIS_18:13:void_mergeSort(int):list.length => --list.length
AOIS_19:13:void_mergeSort(int):list.length => list.length++
AOIS_20:13:void_mergeSort(int):list.length => list.length--
AOIS_21:14:void_mergeSort(int):secondHalfLength => secondHalfLength++
AOIS_22:14:void_mergeSort(int):secondHalfLength => secondHalfLength--
AOIS_23:15:void_mergeSort(int):list.length => ++list.length
AOIS_24:15:void_mergeSort(int):list.length => --list.length
AOIS_25:15:void_mergeSort(int):list.length => list.length++
AOIS_26:15:void_mergeSort(int):list.length => list.length--
AOIS_27:15:void_mergeSort(int):secondHalfLength => secondHalfLength++
AOIS_28:15:void_mergeSort(int):secondHalfLength => secondHalfLength--
AOIS_29:26:void_merge(int,int,int):current1 => ++current1
AOIS_30:26:void_merge(int,int,int):current1 => --current1
AOIS_31:26:void_merge(int,int,int):current1 => current1++
AOIS_32:26:void_merge(int,int,int):current1 => current1--
AOIS_33:26:void_merge(int,int,int):list1.length => ++list1.length
AOIS_34:26:void_merge(int,int,int):list1.length => --list1.length
AOIS_35:26:void_merge(int,int,int):list1.length => list1.length++
AOIS_36:26:void_merge(int,int,int):list1.length => list1.length--
AOIS_37:26:void_merge(int,int,int):current2 => ++current2
AOIS_38:26:void_merge(int,int,int):current2 => --current2
AOIS_39:26:void_merge(int,int,int):current2 => current2++
AOIS_40:26:void_merge(int,int,int):current2 => current2--
AOIS_41:26:void_merge(int,int,int):list2.length => ++list2.length
AOIS_42:26:void_merge(int,int,int):list2.length => --list2.length
AOIS_43:26:void_merge(int,int,int):list2.length => list2.length++
AOIS_44:26:void_merge(int,int,int):list2.length => list2.length--
AOIS_45:27:void_merge(int,int,int):current1 => ++current1
AOIS_46:27:void_merge(int,int,int):current1 => --current1
AOIS_47:27:void_merge(int,int,int):current1 => current1++
AOIS_48:27:void_merge(int,int,int):current1 => current1--
AOIS_49:27:void_merge(int,int,int):current2 => ++current2
AOIS_50:27:void_merge(int,int,int):current2 => --current2
AOIS_51:27:void_merge(int,int,int):current2 => current2++
AOIS_52:27:void_merge(int,int,int):current2 => current2--
AOIS_53:33:void_merge(int,int,int):current1 => ++current1
AOIS_54:33:void_merge(int,int,int):current1 => --current1
AOIS_55:33:void_merge(int,int,int):current1 => current1++
AOIS_56:33:void_merge(int,int,int):current1 => current1--
AOIS_57:33:void_merge(int,int,int):list1.length => ++list1.length
AOIS_58:33:void_merge(int,int,int):list1.length => --list1.length
AOIS_59:33:void_merge(int,int,int):list1.length => list1.length++
AOIS_60:33:void_merge(int,int,int):list1.length => list1.length--
AOIS_61:36:void_merge(int,int,int):current2 => ++current2
AOIS_62:36:void_merge(int,int,int):current2 => --current2
AOIS_63:36:void_merge(int,int,int):current2 => current2++
AOIS_64:36:void_merge(int,int,int):current2 => current2--
AOIS_65:36:void_merge(int,int,int):list2.length => ++list2.length
AOIS_66:36:void_merge(int,int,int):list2.length => --list2.length
AOIS_67:36:void_merge(int,int,int):list2.length => list2.length++
AOIS_68:36:void_merge(int,int,int):list2.length => list2.length--
ROR_1:9:void_mergeSort(int): list.length == 1  =>   list.length > 1
ROR_2:9:void_mergeSort(int): list.length == 1  =>   list.length >= 1
ROR_3:9:void_mergeSort(int): list.length == 1  =>   list.length < 1
ROR_4:9:void_mergeSort(int): list.length == 1  =>   list.length <= 1
ROR_5:9:void_mergeSort(int): list.length == 1  =>   list.length != 1
COR_1:26:void_merge(int,int,int): current1 < list1.length && current2 < list2.length  =>   current1 < list1.length || current2 < list2.length
COR_2:26:void_merge(int,int,int): current1 < list1.length && current2 < list2.length  =>   current1 < list1.length ^ current2 < list2.length
COI_1:9:void_mergeSort(int): list.length == 1  =>  !(list.length == 1)
COI_2:26:void_merge(int,int,int): current1 < list1.length  =>  !(current1 < list1.length)
COI_3:26:void_merge(int,int,int): current2 < list2.length  =>  !(current2 < list2.length)
COI_4:26:void_merge(int,int,int): current1 < list1.length && current2 < list2.length  =>  !(current1 < list1.length && current2 < list2.length)
COI_5:27:void_merge(int,int,int): list1[current1] < list2[current2]  =>  !(list1[current1] < list2[current2])
COI_6:33:void_merge(int,int,int): current1 < list1.length  =>  !(current1 < list1.length)
COI_7:36:void_merge(int,int,int): current2 < list2.length  =>  !(current2 < list2.length)
LOI_1:9:void_mergeSort(int):list.length => -list.length
LOI_2:10:void_mergeSort(int):list.length => -list.length
LOI_3:11:void_mergeSort(int):list.length => -list.length
LOI_4:13:void_mergeSort(int):list.length => -list.length
LOI_5:13:void_mergeSort(int):list.length => -list.length
LOI_6:14:void_mergeSort(int):secondHalfLength => ~secondHalfLength
LOI_7:15:void_mergeSort(int):list.length => -list.length
LOI_8:15:void_mergeSort(int):secondHalfLength => ~secondHalfLength
LOI_9:26:void_merge(int,int,int):current1 => ~current1
LOI_10:26:void_merge(int,int,int):list1.length => -list1.length
LOI_11:26:void_merge(int,int,int):current2 => ~current2
LOI_12:26:void_merge(int,int,int):list2.length => -list2.length
LOI_13:27:void_merge(int,int,int):current1 => ~current1
LOI_14:27:void_merge(int,int,int):current2 => ~current2
LOI_15:28:void_merge(int,int,int):current3 => ~current3
LOI_16:28:void_merge(int,int,int):current1 => ~current1
LOI_17:30:void_merge(int,int,int):current3 => ~current3
LOI_18:30:void_merge(int,int,int):current2 => ~current2
LOI_19:33:void_merge(int,int,int):current1 => ~current1
LOI_20:33:void_merge(int,int,int):list1.length => -list1.length
LOI_21:34:void_merge(int,int,int):current3 => ~current3
LOI_22:34:void_merge(int,int,int):current1 => ~current1
LOI_23:36:void_merge(int,int,int):current2 => ~current2
LOI_24:36:void_merge(int,int,int):list2.length => -list2.length
LOI_25:37:void_merge(int,int,int):current3 => ~current3
LOI_26:37:void_merge(int,int,int):current2 => ~current2
