AORB_1:11:int_oddOrPos(int):x[i] % 2 => x[i] * 2
AORB_2:11:int_oddOrPos(int):x[i] % 2 => x[i] / 2
AORB_3:11:int_oddOrPos(int):x[i] % 2 => x[i] + 2
AORB_4:11:int_oddOrPos(int):x[i] % 2 => x[i] - 2
AORS_1:10:int_oddOrPos(int):i++ => i--
AORS_2:12:int_oddOrPos(int):count++ => count--
AODS_1:12:int_oddOrPos(int):count++ => count
AOIU_1:15:int_oddOrPos(int):count => -count
AOIS_1:10:int_oddOrPos(int):i => ++i
AOIS_2:10:int_oddOrPos(int):i => --i
AOIS_3:10:int_oddOrPos(int):i => i++
AOIS_4:10:int_oddOrPos(int):i => i--
AOIS_5:10:int_oddOrPos(int):x.length => ++x.length
AOIS_6:10:int_oddOrPos(int):x.length => --x.length
AOIS_7:10:int_oddOrPos(int):x.length => x.length++
AOIS_8:10:int_oddOrPos(int):x.length => x.length--
AOIS_9:11:int_oddOrPos(int):i => ++i
AOIS_10:11:int_oddOrPos(int):i => --i
AOIS_11:11:int_oddOrPos(int):i => i++
AOIS_12:11:int_oddOrPos(int):i => i--
AOIS_13:11:int_oddOrPos(int):i => ++i
AOIS_14:11:int_oddOrPos(int):i => --i
AOIS_15:11:int_oddOrPos(int):i => i++
AOIS_16:11:int_oddOrPos(int):i => i--
AOIS_17:15:int_oddOrPos(int):count => count++
AOIS_18:15:int_oddOrPos(int):count => count--
ROR_1:11:int_oddOrPos(int): x[i] % 2 == 1  =>   x[i] % 2 > 1
ROR_2:11:int_oddOrPos(int): x[i] % 2 == 1  =>   x[i] % 2 >= 1
ROR_3:11:int_oddOrPos(int): x[i] % 2 == 1  =>   x[i] % 2 < 1
ROR_4:11:int_oddOrPos(int): x[i] % 2 == 1  =>   x[i] % 2 <= 1
ROR_5:11:int_oddOrPos(int): x[i] % 2 == 1  =>   x[i] % 2 != 1
ROR_6:11:int_oddOrPos(int): x[i] > 0  =>   x[i] >= 0
ROR_7:11:int_oddOrPos(int): x[i] > 0  =>   x[i] < 0
ROR_8:11:int_oddOrPos(int): x[i] > 0  =>   x[i] <= 0
ROR_9:11:int_oddOrPos(int): x[i] > 0  =>   x[i] == 0
ROR_10:11:int_oddOrPos(int): x[i] > 0  =>   x[i] != 0
COR_1:11:int_oddOrPos(int): x[i] % 2 == 1 && x[i] > 0  =>   x[i] % 2 == 1 || x[i] > 0
COR_2:11:int_oddOrPos(int): x[i] % 2 == 1 && x[i] > 0  =>   x[i] % 2 == 1 ^ x[i] > 0
COI_1:10:int_oddOrPos(int): i < x.length  =>  !(i < x.length)
COI_2:11:int_oddOrPos(int): x[i] % 2 == 1  =>  !(x[i] % 2 == 1)
COI_3:11:int_oddOrPos(int): x[i] > 0  =>  !(x[i] > 0)
COI_4:11:int_oddOrPos(int): x[i] % 2 == 1 && x[i] > 0  =>  !(x[i] % 2 == 1 && x[i] > 0)
LOI_1:10:int_oddOrPos(int):i => ~i
LOI_2:10:int_oddOrPos(int):x.length => -x.length
LOI_3:10:int_oddOrPos(int):i => ~i
LOI_4:11:int_oddOrPos(int):i => ~i
LOI_5:11:int_oddOrPos(int):i => ~i
LOI_6:12:int_oddOrPos(int):count => ~count
LOI_7:15:int_oddOrPos(int):count => ~count
